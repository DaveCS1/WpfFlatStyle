<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:FlatStyle"
                    xmlns:converter="clr-namespace:FlatStyle.Converters"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}" />

    <Style x:Key="PrimaryText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style x:Key="SecondaryText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}" />
    </Style>

    <Style x:Key="PrimaryBackgroundText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
    </Style>

    <Style x:Key="SecondaryBackgroundText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
    </Style>

    <Style x:Key="ErrorText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ErrorBrush}" />
    </Style>

    <Style x:Key="ErrorBackgroundText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
    </Style>

    <Style x:Key="PrimaryTextBold" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PrimaryText}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="BottomLine" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1.5" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border  x:Name="shadowBorder" BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Bottom"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Foreground="{TemplateBinding Foreground}">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Key="Return" Command="{x:Static local:Command.ReturnCommand}"
                                                CommandParameter="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                                    <KeyBinding Key="Return"
                                                Command="{Binding Path=(local:SetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}, Path=Text}" />
                                </ScrollViewer.InputBindings>
                            </ScrollViewer>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{Binding Path=(local:Placeholder.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                   x:Name="placeholder"
                                   VerticalAlignment="Bottom"
                                   Padding="{TemplateBinding Padding}"
                                   Margin="2"
                                   FontStyle="Italic"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            <Setter Property="Opacity" TargetName="shadowBorder" Value="0" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFocused}" Value="True">
                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FieldBox" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="local:FieldName.Value" Value="FieldName" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0 1.5" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock FontFamily="{DynamicResource FontPrimary}" HorizontalAlignment="Right" VerticalAlignment="Center"  Text="{Binding Path=(local:FieldName.Value), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Margin="5,0,0,0" Grid.Column="1" x:Name="shadowBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border Margin="5,0,0,0" Grid.Column="1" x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer Margin="0,2,2,2" x:Name="PART_ContentHost"
                                          Focusable="False"
                                          FontFamily="{DynamicResource FontPrimary}"
                                          VerticalAlignment="Bottom"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Key="Return" Command="{x:Static local:Command.ReturnCommand}"
                                                CommandParameter="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                                    <KeyBinding Key="Return"
                                                Command="{Binding Path=(local:SetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}, Path=Text}" />
                                </ScrollViewer.InputBindings>
                            </ScrollViewer>
                        </Border>
                        <TextBlock x:Name="placeholder" Grid.Column="1" IsHitTestVisible="False"
                                   Text="{Binding Path=(local:Placeholder.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                   VerticalAlignment="Bottom"
                                   Padding="{TemplateBinding Padding}"
                                   FontFamily="{DynamicResource FontPrimary}"
                                   Margin="5,2,2,2"
                                   Opacity="0.7"
                                   FontStyle="Italic"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            <Setter Property="Opacity" TargetName="shadowBorder" Value="0" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FieldBoxVertical" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="local:FieldName.Value" Value="FieldName" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0 1.5" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock FontFamily="{DynamicResource FontPrimary}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Path=(local:FieldName.Value), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Grid.Row="1" x:Name="shadowBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border  Grid.Row="1" x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer Margin="0,2,2,2" x:Name="PART_ContentHost"
                                          Focusable="False"
                                          FontFamily="{DynamicResource FontPrimary}"
                                          VerticalAlignment="Bottom"
                                          HorizontalAlignment="Stretch"
                                          TextBlock.TextAlignment="Center"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Key="Return" Command="{x:Static local:Command.ReturnCommand}"
                                                CommandParameter="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                                    <KeyBinding Key="Return"
                                                Command="{Binding Path=(local:SetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}, Path=Text}" />
                                </ScrollViewer.InputBindings>
                            </ScrollViewer>
                        </Border>
                        <TextBlock x:Name="placeholder" Grid.Row="1" IsHitTestVisible="False"
                                   Text="{Binding Path=(local:Placeholder.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                   VerticalAlignment="Bottom"
                                   Padding="{TemplateBinding Padding}"
                                   FontFamily="{DynamicResource FontPrimary}"
                                   Margin="2,2,2,2"
                                   Opacity="0.7"
                                   FontStyle="Italic"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            <Setter Property="Opacity" TargetName="shadowBorder" Value="0" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FieldBoxGetSet" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="local:FieldName.Value" Value="FieldName" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="local:GetText.Value" Value="Get" />
        <Setter Property="local:SetText.Value" Value="Set" />
        <Setter Property="BorderThickness" Value="0,0,0 1.5" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock FontFamily="{DynamicResource FontPrimary}" VerticalAlignment="Center"  Text="{Binding Path=(local:FieldName.Value), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Margin="5,0,0,0" Grid.Column="1" x:Name="shadowBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border Margin="5,0,0,0" Grid.Column="1" x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer Margin="0,2,2,2" x:Name="PART_ContentHost"
                                          Focusable="False"
                                          FontFamily="{DynamicResource FontPrimary}"
                                          VerticalAlignment="Bottom"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Key="Return" Command="{x:Static local:Command.ReturnCommand}"
                                                CommandParameter="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                                    <KeyBinding Key="Return"
                                                Command="{Binding Path=(local:SetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}, Path=Text}" />
                                </ScrollViewer.InputBindings>
                            </ScrollViewer>
                        </Border>
                        <TextBlock x:Name="placeholder" Grid.Column="1" IsHitTestVisible="False"
                                   Text="{Binding Path=(local:Placeholder.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                   VerticalAlignment="Bottom"
                                   Padding="{TemplateBinding Padding}"
                                   FontFamily="{DynamicResource FontPrimary}"
                                   Margin="5,2,2,2"
                                   Opacity="0.7"
                                   FontStyle="Italic"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button Content="{Binding Path=(local:GetText.Value),RelativeSource={RelativeSource TemplatedParent}}"
                                    Command="{Binding Path=(local:GetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="{Binding Name, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />

                            <Button Content="{Binding Path=(local:SetText.Value),RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{TemplateBinding IsReadOnly, Converter={converter:BooleanToVisiblityConverter}, ConverterParameter=IC}"
                                    Command="{Binding Path=(local:SetCommand.Value),RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="{Binding Text, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            <Setter Property="Opacity" TargetName="shadowBorder" Value="0" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FieldBoxGetSetVertical" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="local:FieldName.Value" Value="FieldName" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="local:GetText.Value" Value="Get" />
        <Setter Property="local:SetText.Value" Value="Set" />
        <Setter Property="BorderThickness" Value="0,0,0 1.5" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock FontFamily="{DynamicResource FontPrimary}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Text="{Binding Path=(local:FieldName.Value), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Grid.Row="1" x:Name="shadowBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border Grid.Row="1" x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer Margin="0,2,2,2" x:Name="PART_ContentHost"
                                          Focusable="False"
                                          FontFamily="{DynamicResource FontPrimary}"
                                          VerticalAlignment="Bottom"
                                          TextBlock.TextAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Key="Return" Command="{x:Static local:Command.ReturnCommand}"
                                                CommandParameter="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                                    <KeyBinding Key="Return"  Command="{Binding Path=(local:SetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}" />
                                </ScrollViewer.InputBindings>
                            </ScrollViewer>
                        </Border>
                        <TextBlock x:Name="placeholder" Grid.Row="1" IsHitTestVisible="False"
                                   Text="{Binding Path=(local:Placeholder.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                   VerticalAlignment="Bottom"
                                   Padding="{TemplateBinding Padding}"
                                   FontFamily="{DynamicResource FontPrimary}"
                                   Margin="2,2,2,2"
                                   Opacity="0.7"
                                   FontStyle="Italic"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <StackPanel Grid.Row="2"  HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button Content="{Binding Path=(local:GetText.Value),RelativeSource={RelativeSource TemplatedParent}}"
                                    Command="{Binding Path=(local:GetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="{Binding Name, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />

                            <Button Content="{Binding Path=(local:SetText.Value),RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{TemplateBinding IsReadOnly, Converter={converter:BooleanToVisiblityConverter}, ConverterParameter=IC}"
                                    Command="{Binding Path=(local:SetCommand.Value),RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="{Binding Text, RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            <Setter Property="Opacity" TargetName="shadowBorder" Value="0" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Border.Effect" TargetName="shadowBorder">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ForegroundMain}" Direction="320" ShadowDepth="2"  Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundMainBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="5,2,5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid MinHeight="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <TextBlock x:Name="topText"
                                       Text="{TemplateBinding local:Placeholder.Value}" HorizontalAlignment="Center" VerticalAlignment="Top"
                                       Margin="0,-6,0,0" Padding="3,0" Background="{TemplateBinding Background}"
                                       Panel.ZIndex="1"  Visibility="Visible" />
                        <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}"
                                    Width="{TemplateBinding Width}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                            <Canvas HorizontalAlignment="Stretch">
                                <Grid MinHeight="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding Width}">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"
                                                  Margin="2" VerticalAlignment="Center">
                                        <ScrollViewer.InputBindings>
                                            <KeyBinding Key="Return" Command="{x:Static local:Command.ReturnCommand}"
                                                CommandParameter="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}" />
                                            <KeyBinding Key="Return"
                                                Command="{Binding Path=(local:SetCommand.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}, Path=Text}" />
                                        </ScrollViewer.InputBindings>
                                    </ScrollViewer>
                                    <TextBlock  x:Name="PlaceholderLabel" Opacity="0.8"
                                                Text="{TemplateBinding local:Placeholder.Value}" Margin="0"  FontStyle="Italic"
                                                VerticalAlignment="Center" Visibility="Hidden" />
                                </Grid>
                            </Canvas>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="topText" Property="Visibility" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PlaceholderLabel" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="topText" Property="Visibility" Value="Visible" />
                            <Setter Property="Visibility" TargetName="PlaceholderLabel" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>